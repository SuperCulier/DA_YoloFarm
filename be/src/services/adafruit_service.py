from fastapi.encoders import jsonable_encoder
import requests
from datetime import datetime
from src.config.settings import ADAFRUIT_IO_USERNAME, ADAFRUIT_IO_KEY
from src.config.database import insert_one

# Danh s√°ch c√°c feed c·∫ßn l·∫•y d·ªØ li·ªáu
FEED_KEYS = ["temperature", "humidity", "lux", "soil-moisture"]
COLLECTION_NAME = "environment_data"

def fetch_data(feed_key):
    """L·∫•y d·ªØ li·ªáu t·ª´ Adafruit IO"""
    url = f"https://io.adafruit.com/api/v2/{ADAFRUIT_IO_USERNAME}/feeds/{feed_key}/data"
    headers = {"X-AIO-Key": ADAFRUIT_IO_KEY}
    
    # Ki·ªÉm tra ph·∫£n h·ªìi t·ª´ Adafruit
    print(f"üì° Request URL: {url}")
    

    response = requests.get(url, headers=headers)

    print(f" da qua doan nay///////////////////////////////////////////////////")

    print(f"üì° Status Code: {response.status_code}")
    print(f"üì° Response JSON: {response.json()}")

    if response.status_code == 200:
        data = response.json()
        if data:
            latest_entry = data[0]
            return {
                "region": "farm_1",
                "feed": feed_key,
                "value": float(latest_entry["value"]),
                "timestamp": datetime.strptime(latest_entry["created_at"], 
                             "%Y-%m-%dT%H:%M:%S.%fZ" if "." in latest_entry["created_at"] else "%Y-%m-%dT%H:%M:%SZ")
            }
    return None

def show_value():
    """Tr·∫£ v·ªÅ b·ªô th√¥ng s·ªë ƒëo ƒë∆∞·ª£c m·ªõi nh·∫•t t·ª´ Adafruit IO."""
    latest_data = {}

    for feed in FEED_KEYS:
        data = fetch_data(feed)  # L·∫•y d·ªØ li·ªáu t·ª´ Adafruit

        if data:
            latest_data[feed] = {
                "region": data["region"],
                "value": data["value"],
                "timestamp": data["timestamp"].isoformat()  # Chuy·ªÉn datetime th√†nh chu·ªói ISO 8601
            }
        else:
            latest_data[feed] = {"error": "Kh√¥ng c√≥ d·ªØ li·ªáu"}
    return latest_data

def update_environment_data():
    """L·∫•y v√† l∆∞u d·ªØ li·ªáu v√†o MongoDB"""
    results = []
    for feed in FEED_KEYS:
        data = fetch_data(feed)  # L·∫•y d·ªØ li·ªáu t·ª´ Adafruit IO
        print(f"‚úÖ Fetch data for {feed}: {data}")  # Debug d·ªØ li·ªáu l·∫•y v·ªÅ

        if data:
            data_copy = data.copy()  # T·∫°o b·∫£n sao tr∆∞·ªõc khi l∆∞u
            insert_one(COLLECTION_NAME, data_copy)  # L∆∞u v√†o MongoDB
            results.append(data)  # Th√™m b·∫£n g·ªëc v√†o danh s√°ch k·∫øt qu·∫£
            print(f"‚úÖ D·ªØ li·ªáu ƒë√£ ƒë∆∞·ª£c l∆∞u v√†o MongoDB: {data_copy}")
        else:
            print(f"‚ùå Kh√¥ng c√≥ d·ªØ li·ªáu ƒë·ªÉ l∆∞u cho {feed}")

    # Chuy·ªÉn _id th√†nh chu·ªói n·∫øu c√≥
    for item in results:
        if "_id" in item:
            item["_id"] = str(item["_id"])  # Chuy·ªÉn ObjectId th√†nh chu·ªói

    print("‚úÖ D·ªØ li·ªáu tr∆∞·ªõc khi tr·∫£ v·ªÅ:", results)  # Debug d·ªØ li·ªáu

    return jsonable_encoder(results)

